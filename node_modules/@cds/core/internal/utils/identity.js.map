{"version":3,"file":"identity.js","sourceRoot":"","sources":["../../../../src/internal/utils/identity.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport is from 'ramda/es/is.js';\nimport isEmpty from 'ramda/es/isEmpty.js';\nimport isNil from 'ramda/es/isNil.js';\n\nexport function isNilOrEmpty(val: any): boolean {\n  return isNil(val) || isEmpty(val);\n}\n\nexport function isString(val: any): boolean {\n  return is(String, val);\n}\n\nexport function isNumericString(val: string): boolean {\n  return isString(val) && !isEmpty(val.trim()) && +val === +val;\n}\n\nexport function isStringOrNil(val: any): boolean {\n  return is(String, val) || isNil(val);\n}\n\nexport function isStringAndNotNilOrEmpty(val: any) {\n  return isString(val) && !isNil(val) && !isEmpty(val);\n}\n\nexport function isObject(val: any) {\n  return is(Object, val);\n}\n\nexport function isMap(val: any) {\n  return is(Map, val);\n}\n\nexport function isObjectAndNotNilOrEmpty(val: any) {\n  return !isNilOrEmpty(val) && isObject(val);\n}\n\nexport function hasPropertyChanged(val: any, oldVal: any): boolean {\n  return val !== oldVal;\n}\n\n// marks nil values (undefined, null, empty string) as changed\nexport function hasStringPropertyChanged(val: string | null | undefined, oldVal: string): boolean {\n  return isStringOrNil(val) && hasPropertyChanged(val, oldVal);\n}\n\n// ignores nil values when checking for changes\nexport function hasStringPropertyChangedAndNotNil(val: string | null | undefined, oldVal: string): boolean {\n  return !isNilOrEmpty(val) && hasPropertyChanged(val, oldVal);\n}\n\nexport function getEnumValues(enumeration: any) {\n  return Object.values(enumeration);\n}\n\nexport function createId(prefix = '_') {\n  return `${prefix}${Math.random().toString(36).substr(2, 9)}`;\n}\n\n// used by deepClone() tested through integration\nfunction cloneMap(mp: Map<any, any>): Map<any, any> {\n  const clonedMap = new Map();\n  for (const [key, val] of mp) {\n    if (isMap(val)) {\n      clonedMap.set(key, cloneMap(val));\n    } else {\n      clonedMap.set(key, val);\n    }\n  }\n  return clonedMap;\n}\n\nexport function deepClone(obj: any) {\n  // this will clone almost anything (maps, arrays, objects, etc.) to the lowest of the low levels\n  // be careful using this carelessly b/c it CAN have performance implications!\n\n  return isMap(obj) ? cloneMap(obj) : JSON.parse(JSON.stringify(obj));\n}\n\ntype ObjectPropertyNameAndValueTuples =\n  | [string, string]\n  | [string, true]\n  | [string, false]\n  | [string, null]\n  | [string, undefined]\n  | [string, number];\n\n// this utility is a little restrictive on its inputs. it expects a specific format.\n// going outside of that format (like passing an object or function as the value) can yield unintended results.\n// this does NOT eval anything. that would be bad.\n// 'isValid:true status:success': string =>\n// [['isValid', true], ['status', 'success']]: [string, string | number | boolean][]\nexport function convertStringPropValuePairsToTuple(propValString: string): ObjectPropertyNameAndValueTuples[] {\n  // starts as a string like... \"isValid:true status:success\"\n  return propValString\n    .split(' ')\n    .map(str => str.split(':'))\n    .map(pv => {\n      const [propname, propValAsString] = pv;\n\n      if (propValAsString === 'true') {\n        return [propname, true];\n      }\n\n      if (propValAsString === 'false') {\n        return [propname, false];\n      }\n\n      if (propValAsString === 'null') {\n        return [propname, null];\n      }\n\n      if (propValAsString === 'undefined') {\n        return [propname, undefined];\n      }\n\n      if (isNumericString(propValAsString)) {\n        return [propname, +propValAsString];\n      }\n\n      // else it's a string and that's ok\n      return [propname, propValAsString];\n    });\n  // returns as [['isValide', true], ['status', 'success']]\n}\n\nexport function anyOrAllPropertiesPass(obj: any, propValuePairs: string, anyOrAll: 'any' | 'all'): boolean {\n  if (!propValuePairs) {\n    return true;\n  }\n\n  const tests = convertStringPropValuePairsToTuple(propValuePairs);\n\n  if (!obj) {\n    return false;\n  }\n\n  if (tests.length < 1) {\n    return true;\n  } else {\n    const testResults = tests.filter(pvArry => {\n      const [propname, expectedVal] = pvArry;\n\n      if (expectedVal === false) {\n        return !obj[propname];\n      }\n\n      return obj[propname] === expectedVal;\n    });\n\n    return anyOrAll === 'all' ? testResults.length === tests.length : testResults.length > 0;\n  }\n}\n\nexport function allPropertiesPass(obj: any, propValuePairs: string): boolean {\n  return anyOrAllPropertiesPass(obj, propValuePairs, 'all');\n}\n\nexport function anyPropertiesPass(obj: any, propValuePairs: string): boolean {\n  return anyOrAllPropertiesPass(obj, propValuePairs, 'any');\n}\n\nexport function getMillisecondsFromSeconds(sec: number): number {\n  return isNil(sec) ? 0 : Number(sec) * 1000;\n}\n"]}