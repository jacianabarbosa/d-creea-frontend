{"version":3,"file":"dom.js","sourceRoot":"","sources":["../../../../src/internal/utils/dom.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport includes from 'ramda/es/includes.js';\nimport without from 'ramda/es/without.js';\n\nimport { isStringAndNotNilOrEmpty } from './identity.js';\n\n/**\n * We are not going to be opinionated about the use of the disabled attribute here.\n * Browsers will manage that on their own. The focus of this is to determine whether\n * or not a tabindex should be set on an element to make it programmatically\n * focusable.\n *\n */\nexport function isFocusable(element: HTMLElement) {\n  const elementTagName = element.tagName.toLowerCase();\n\n  switch (elementTagName) {\n    case 'input':\n    case 'button':\n    case 'select':\n    case 'textarea':\n    case 'object':\n      return true;\n    case 'a':\n    case 'area':\n      return element.hasAttribute('href');\n    case 'audio':\n    case 'video':\n      return element.hasAttribute('controls');\n    default:\n      // we are not going to get into invalid values sent to the\n      // tabindex attr. users have control of that and should avoid\n      // setting tabindex to weird/unsupported values.\n      return element.hasAttribute('tabindex');\n  }\n}\n\nexport function getElementWidth(element: HTMLElement, unit = 'px') {\n  if (element) {\n    return element.getBoundingClientRect ? element.getBoundingClientRect().width + unit : '';\n  }\n  return '';\n}\n\nexport function getElementWidthUnless(element: HTMLElement, unless: boolean) {\n  if (!unless) {\n    return getElementWidth(element);\n  }\n  return '';\n}\n\nexport function isHTMLElement(el: any) {\n  return !!el && el instanceof HTMLElement;\n}\n\nexport type HTMLAttributeTuple = [string, string | boolean];\n\nexport function hasAttributeAndIsNotEmpty(element: HTMLElement | null, attribute: string) {\n  return !!element && element.hasAttribute(attribute) && isStringAndNotNilOrEmpty(element.getAttribute(attribute));\n}\n\nexport function setOrRemoveAttribute(element: HTMLElement, attrTuple: HTMLAttributeTuple, test: () => boolean) {\n  const [attribute, value] = attrTuple;\n  if (test()) {\n    setAttributes(element, [attribute, value]);\n  } else {\n    removeAttributes(element, attribute);\n  }\n}\n\nexport function setAttributes(element: HTMLElement, ...attributeTuples: HTMLAttributeTuple[]) {\n  if (element) {\n    attributeTuples.forEach(([attr, val]) => {\n      if (val === false || val === null) {\n        element.removeAttribute(attr);\n      } else {\n        element.setAttribute(attr, val + '');\n      }\n    });\n  }\n}\n\nexport function removeAttributes(element: HTMLElement, ...attrs: string[]) {\n  if (element) {\n    attrs.forEach(attr => {\n      element.removeAttribute(attr);\n    });\n  }\n}\n\nexport function addAttributeValue(element: HTMLElement, attr: string, value: string) {\n  if (element) {\n    const currentAttrVal = element.getAttribute(attr);\n    if (!currentAttrVal) {\n      element.setAttribute(attr, value);\n    } else if (!includes(value, currentAttrVal.split(' '))) {\n      // add it only if it is not already there\n      element.setAttribute(attr, currentAttrVal + ' ' + value);\n    }\n  }\n}\n\nexport function removeAttributeValue(element: HTMLElement, attr: string, value: string) {\n  if (element) {\n    const currentAttrVal = element.getAttribute(attr);\n    if (currentAttrVal) {\n      // remove the specified value from the list of values currently set\n      const attrValues: string[] = without([value], currentAttrVal.split(' '));\n      const newAttrValue = attrValues.join(' ');\n\n      if (newAttrValue) {\n        element.setAttribute(attr, newAttrValue);\n      } else {\n        element.removeAttribute(attr);\n      }\n    }\n  }\n}\n\nexport function assignSlotNames(...slotTuples: [HTMLElement, string | boolean][]): void {\n  slotTuples.forEach(slotTuple => {\n    const [el, slotName] = slotTuple;\n    if (el) {\n      setAttributes(el, ['slot', slotName]);\n    }\n  });\n}\n\nexport function listenForAttributeChange(\n  element: HTMLElement,\n  attrName: string,\n  fn: (attrValue: string | null) => void\n) {\n  const observer = new MutationObserver(mutations => {\n    if (mutations.find(m => m.attributeName === attrName)) {\n      fn(element.getAttribute(attrName));\n    }\n  });\n\n  observer.observe(element, { attributes: true });\n  return observer;\n}\n\nexport function isVisible(element: HTMLElement) {\n  return !!element && element?.offsetHeight > 0 && element?.hasAttribute('hidden') === false;\n}\n\nexport function spanWrapper(nodeList: NodeListOf<ChildNode>): void {\n  Array.from(nodeList)\n    .filter(node => node.textContent && node.textContent.trim().length > 0 && node.nodeType === 3 && node.parentElement)\n    .forEach(node => {\n      const spanWrapper = document.createElement('span');\n      node.after(spanWrapper);\n      spanWrapper.appendChild(node);\n    });\n}\n\nexport function queryChildFromLightOrShadowDom(hostEl: Element, selector?: string): Element | null {\n  if (!selector) {\n    return null;\n  }\n\n  return hostEl.querySelector(selector) || hostEl?.shadowRoot?.querySelector(selector) || null;\n}\n"]}