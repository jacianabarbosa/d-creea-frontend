{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/internal/motion/utils.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AnimatableElement,\n  AnimationOptions,\n  AnimationStatus,\n  AnimationKeyframes,\n  CLARITY_MOTION_ENTER_LEAVE_PROPERTY,\n  CLARITY_MOTION_FALLBACK_DURATION_IN_MS,\n  CLARITY_MOTION_FALLBACK_EASING,\n  CLARITY_MOTION_REVERSE_ANIMATION_LABEL,\n  CLARITY_MOTION_REVERSE_ANIMATION_SUFFIX,\n  PropertyDrivenAnimation,\n  TargetedAnimation,\n  TargetedAnimationAsPropertyTuple,\n} from './interfaces.js';\nimport { LogService } from '../services/log.service.js';\nimport { ClarityMotion } from './motion.service.js';\nimport clone from 'ramda/es/clone.js';\nimport { getCssPropertyValue, isCssPropertyName } from '../utils/css.js';\nimport { isPrefixedBy, isSuffixedBy, getNumericValueFromCssSecondsStyleValue, removePrefix } from '../utils/string.js';\nimport { queryChildFromLightOrShadowDom } from '../utils/dom.js';\nimport { allPropertiesPass, getMillisecondsFromSeconds } from '../utils/identity.js';\n\n/**\n * runPropertyAnimations() is a utility function called by the @animate(). It is a single point of entry\n * to execute the property-driven animations found in components like the accordion and overlay.\n *\n * Other utilities here are exported to break up the unit tests covering the animation/motion\n * library. While they could be called or used in isolation, it is not recommended for most use cases.\n *\n * runPropertyAnimations returns a boolean so that we know if it ran successfully or not. This is\n * mostly to make testing the function easier.\n *\n * @internal\n */\nexport async function runPropertyAnimations(props: Map<string, any>, hostEl: AnimatableElement): Promise<boolean> {\n  if (!hostEl._animations) {\n    LogService.warn(`${hostEl.tagName.toLocaleLowerCase()} is trying to animate but no animations are defined.`);\n    return false;\n  }\n\n  // this runs through animations for each property sequentially\n  // animations passed into getPropertyAnimations are the Property-Driven Animations\n  // passed into the @animate decorator\n  // { hidden: { true: 'cds-modal-enter-reverse', false: 'enter' }, status: { error: 'cds-component-shake' } }\n\n  // getPropertyAnimations transforms the @animate decorator config into an array of\n  // tuples so they are easier to work with.\n  // ['hidden', { true: 'cds-modal-enter-reverse', false: 'enter' }], ['status', { error: 'cds-component-shake' }]\n  // * inactive animations are filtered out\n  const propertyAnimations = getPropertyAnimations(hostEl._animations, props);\n\n  const animationsRan = await Promise.all(\n    propertyAnimations.map((propNameAnimationTuple: TargetedAnimationAsPropertyTuple) => {\n      const [propname, propertyAnimationsByValue] = propNameAnimationTuple;\n\n      if (props.get(propname) === hostEl[propname]) {\n        // a weird/unlikely state where an update is sent but the property value didn't actually change\n        return false;\n      }\n\n      // gets animations to run based on the property's value\n      const animatedPropertyValueAsString = propertyAnimationsByValue[hostEl[propname].toString()];\n      const cdsMotionValue = hostEl.cdsMotion;\n\n      // looping through each tuple value in order, getAnimationConfigForPropertyValue()\n      // returns a tuple with the animation name from Clarity Motion and the TargetedAnimation\n      // config (also returned from the Clarity Motion service)\n      // ['enter-reverse', [ { target: '.private-host', animation: [ { opacity: 0 }, { opacity: 1 } ], options: { duration: 300 }}]\n\n      const [motionName, returnedMotion] = getAnimationConfigForPropertyValue(\n        animatedPropertyValueAsString,\n        getInlineOverride(cdsMotionValue, propname, hostEl[propname].toString())\n      );\n      let motionForMyValue = clone(returnedMotion); // have to jump through this hoop to keep typescript happy\n\n      // jumps out if there are no animation routines\n      if (motionForMyValue.length < 1) {\n        return false;\n      }\n\n      motionForMyValue = setAnimationConfigOptions(motionName, motionForMyValue, hostEl);\n\n      // loops through animation config and runs them; assigns the promises to an array we can Promise.all() at the end\n      const animations = getAnimationPromiseInstructions(animatedPropertyValueAsString, motionForMyValue, hostEl);\n\n      return Promise.all(animations).then(() => {\n        resolveAnimationEndStatus(animatedPropertyValueAsString, hostEl);\n        return true;\n      });\n    })\n  )\n    .then(result => {\n      return result.indexOf(true) > -1;\n    })\n    .catch(() => {\n      return false;\n    });\n\n  return animationsRan;\n}\n\n// --- CONTROL FLOW UTILS ---\n\nexport function setAnimationStartStatus(animatedPropertyValueAsString: string, hostEl: AnimatableElement) {\n  // accesses and manipulates the private animation status attr;\n  if (hostEl.getAttribute('_cds-animation-status') !== AnimationStatus.active) {\n    hostEl.setAttribute('_cds-animation-status', AnimationStatus.active);\n    // this is here so we only emit the start event once, right when the whole animation starts...\n    hostEl.cdsMotionChange.emit(`${animatedPropertyValueAsString} animation ${AnimationStatus.start}`);\n  }\n}\n\nexport function resolveAnimationEndStatus(animatedPropertyValueAsString: string, hostEl: AnimatableElement) {\n  // sets super secret animation attr back to 'ready'\n  hostEl.setAttribute('_cds-animation-status', AnimationStatus.ready); // A\n\n  // emits the name of the animation and that it ended\n  hostEl.cdsMotionChange.emit(`${animatedPropertyValueAsString} animation ${AnimationStatus.end}`); // A\n}\n\nexport function setAnimationConfigOptions(\n  motionName: string,\n  motionForMyValue: TargetedAnimation[],\n  hostEl: AnimatableElement\n): TargetedAnimation[] {\n  const cdsMotionValue = hostEl.cdsMotion;\n  const animationsAreTurnedOff = !cdsMotionValue || cdsMotionValue === 'off';\n\n  // the following set of functions – reverseAnimationConfig(), zeroOutAnimationConfig(),\n  // setAnimationDuration(), setAnimationEasing() – modify the \"options\" portion of the animation routine\n  // in the tuple above that is returned from getAnimationConfigForPropertyValue\n  if (animationIsReversed(motionName)) {\n    motionForMyValue = reverseAnimationConfig(motionForMyValue);\n  }\n\n  if (animationsAreTurnedOff) {\n    // cdsMotion is turned off, so zero out the duration\n    motionForMyValue = zeroOutAnimationConfig(motionForMyValue);\n  } else {\n    // sets duration and easing based on CSS properties, passed values, or a global fallback\n    motionForMyValue = setAnimationDuration(motionForMyValue, hostEl);\n    motionForMyValue = setAnimationEasing(motionForMyValue, hostEl);\n  }\n\n  return motionForMyValue;\n}\n\nexport function getAnimationPromiseInstructions(\n  animatedPropertyValueAsString: string,\n  motionConfigs: TargetedAnimation[],\n  hostEl: AnimatableElement\n): Promise<unknown>[] {\n  return motionConfigs\n    .filter(config => !config.onlyIf || allPropertiesPass(hostEl, config.onlyIf))\n    .map(config => {\n      setAnimationStartStatus(animatedPropertyValueAsString, hostEl);\n\n      return new Promise(resolve => {\n        const animationPlayer = getAnimationTarget(hostEl, config.target).animate(\n          getAnimationKeyframesOrPropertyIndexedFrames(config.animation, hostEl),\n          config.options || {}\n        );\n\n        const listener = () => {\n          resolve('animation finished');\n          animationPlayer.removeEventListener('finish', listener);\n        };\n\n        animationPlayer.addEventListener('finish', listener);\n      });\n    });\n}\n\nexport function getAnimationTarget(hostEl: Element, targetSelector?: string): Element {\n  return queryChildFromLightOrShadowDom(hostEl, targetSelector) || hostEl;\n}\n\nexport function getAnimationKeyframesOrPropertyIndexedFrames(\n  animationConfig: AnimationKeyframes | PropertyIndexedKeyframes,\n  hostEl: Element\n): AnimationKeyframes | PropertyIndexedKeyframes {\n  return !Array.isArray(animationConfig) ? animationConfig : sizeDimensionKeyframes(animationConfig, hostEl);\n}\n\n// --- REVERSING UTILS ---\n\n// string -> boolean\nexport function animationIsReversed(nameOfAnimation: string) {\n  return isSuffixedBy(nameOfAnimation, CLARITY_MOTION_REVERSE_ANIMATION_SUFFIX);\n}\n\n// { target: '.my-selector', animation: [<keyframes>], options: { duration: 500 }} ->\n// { target: '.my-selector', animation: [<keyframes>], options: { duration: 500, direction: 'reverse' }}\nexport function reverseAnimationConfig(config: TargetedAnimation[]): TargetedAnimation[] {\n  return config.map((anim: TargetedAnimation) => {\n    if (anim.options) {\n      anim.options.direction = CLARITY_MOTION_REVERSE_ANIMATION_LABEL;\n    } else {\n      anim.options = { direction: CLARITY_MOTION_REVERSE_ANIMATION_LABEL };\n    }\n    return anim;\n  });\n}\n\n// 'my-animation' -> 'my-animation-reverse'\nexport function reverseAnimation(animationName: string) {\n  return [animationName, '-', CLARITY_MOTION_REVERSE_ANIMATION_LABEL].join('');\n}\n\n// --- ANIMATION CONFIG RETRIEVAL ---\n\n// returns an animation name from a stringified @animate decorator config passed into the\n// cds-motion attr. looks it up by property first and value second. returns empty string\n// if no animation name matches the property and property value.\nexport function getInlineOverride(cdsMotionValue: string, propName: string, propValue: string): string {\n  if (!cdsMotionValue || !propName || typeof propValue === 'undefined') {\n    return '';\n  }\n\n  if (cdsMotionValue === 'on' || cdsMotionValue === 'off') {\n    return '';\n  }\n\n  let inlineOverride: any | null;\n\n  try {\n    inlineOverride = JSON.parse(cdsMotionValue);\n  } catch (e) {\n    return '';\n  }\n\n  const overrideValue = inlineOverride[propName] && inlineOverride[propName][propValue];\n\n  return overrideValue ? overrideValue : '';\n}\n\n// 'i-am-reverse' -> 'i-am'\nexport function extractAnimationNameIfReversed(name: string): string {\n  return animationIsReversed(name) ? name.slice(0, -1 * CLARITY_MOTION_REVERSE_ANIMATION_SUFFIX.length) : name;\n}\n\n// if the name retrieved from the cds-motion config is present in Clarity Motion, it is returned\nexport function getAnimationFromOverrideOrDecorator(decoratorValue: string, overrideValue?: string) {\n  if (!overrideValue) {\n    return decoratorValue;\n  }\n\n  return ClarityMotion.has(extractAnimationNameIfReversed(overrideValue)) ? overrideValue : decoratorValue;\n}\n\n// ('animation-name') -> ['animation-name', [ { target: '.an-element', animation: [<keyframes>], options: { ... }}]];\n// ('animation-name', 'name-retrieved-from-cds-motion-config') ->\n// ['name-retrieved-from-cds-motion-config', [ { target: ..., animation: [<keyframes>], options: { ... }}]];\nexport function getAnimationConfigForPropertyValue(\n  nameOfAnimationFromObject: string,\n  cdsMotionOverride?: string\n): [string, TargetedAnimation[]] {\n  const nameOfAnimation = getAnimationFromOverrideOrDecorator(nameOfAnimationFromObject, cdsMotionOverride);\n  return [nameOfAnimation, clone(ClarityMotion.get(extractAnimationNameIfReversed(nameOfAnimation)))];\n}\n\n// --- SETTING ANIMATION CONFIG VALUES ---\n\nexport function setAnimationDuration(config: TargetedAnimation[], hostEl: AnimatableElement): TargetedAnimation[] {\n  return setAnimationProperty('duration', hostEl, config, CLARITY_MOTION_FALLBACK_DURATION_IN_MS, (val: string) => {\n    return getMillisecondsFromSeconds(getNumericValueFromCssSecondsStyleValue(val));\n  });\n}\n\nexport function setAnimationEasing(config: TargetedAnimation[], hostEl: AnimatableElement): TargetedAnimation[] {\n  return setAnimationProperty('easing', hostEl, config, CLARITY_MOTION_FALLBACK_EASING);\n}\n\nexport function zeroOutAnimationConfig(config: TargetedAnimation[]): TargetedAnimation[] {\n  return config.map(anim => {\n    if (anim.options) {\n      anim.options.duration = 0;\n      anim.options.easing = CLARITY_MOTION_FALLBACK_EASING;\n    } else {\n      anim.options = { duration: 0, easing: CLARITY_MOTION_FALLBACK_EASING };\n    }\n    return anim;\n  });\n}\n\nexport function setAnimationProperty(\n  propertyName: string,\n  hostEl: AnimatableElement,\n  config: TargetedAnimation[],\n  staticFallback: string | number,\n  valueConverter?: (arg: string) => string | number\n) {\n  return config.map((anim: TargetedAnimation) => {\n    if (anim.options) {\n      if (!(anim.options as AnimationOptions)[propertyName]) {\n        (anim.options as AnimationOptions)[propertyName] = staticFallback;\n      } else if (isCssPropertyName((anim.options as { [key: string]: any })[propertyName])) {\n        const myConfigOption = (anim.options as AnimationOptions)[propertyName];\n        let valFromProperty: string | number = getCssPropertyValue(myConfigOption as string, hostEl);\n\n        if (!valFromProperty) {\n          valFromProperty = staticFallback;\n        } else if (valueConverter) {\n          valFromProperty = valueConverter(valFromProperty);\n        }\n\n        (anim.options as AnimationOptions)[propertyName] = valFromProperty;\n      }\n      // else fallthrough not required because option is already set to intended value\n    } else {\n      const newConfigOptions: AnimationOptions = {};\n      newConfigOptions[propertyName] = staticFallback;\n      anim.options = newConfigOptions;\n    }\n    return anim;\n  });\n}\n\n// -- TRANSFORM PROPERTY-DRIVEN ANIMATION OBJECTS TO ANIMATION CONFIG OBJECTS ---\nexport function sizeDimensionKeyframes(animationKeyframes: AnimationKeyframes, hostEl: Element): AnimationKeyframes {\n  if (!Array.isArray(animationKeyframes)) {\n    return animationKeyframes;\n  }\n\n  return animationKeyframes.map((kf: Keyframe) => {\n    if (kf?.hasOwnProperty('height') && isPrefixedBy(kf?.height?.toString() || '', 'from:')) {\n      const selector = removePrefix(kf?.height?.toString() || '', 'from:');\n      const measureTarget = queryChildFromLightOrShadowDom(hostEl, selector) || null;\n      kf.height = !measureTarget ? 'auto' : measureTarget.getBoundingClientRect().height + 'px';\n    }\n    if (kf?.hasOwnProperty('width') && isPrefixedBy(kf?.width?.toString() || '', 'from:')) {\n      const selector = removePrefix(kf?.width?.toString() || '', 'from:');\n      const measureTarget = queryChildFromLightOrShadowDom(hostEl, selector) || null;\n      kf.width = !measureTarget ? 'auto' : measureTarget.getBoundingClientRect().width + 'px';\n    }\n    return kf;\n  });\n}\n\nexport function filterAnimationsByUpdatedProperties(\n  animations: PropertyDrivenAnimation,\n  updatingProps: Map<string, any>\n): PropertyDrivenAnimation | null {\n  if (animations === null || animations === undefined || animations === {}) {\n    return null;\n  }\n\n  let objectIsEmpty = true;\n  const returnObject: PropertyDrivenAnimation = {};\n\n  Object.getOwnPropertyNames(animations).forEach((prop: string) => {\n    if (updatingProps.has(prop)) {\n      returnObject[prop] = clone(animations[prop]);\n      objectIsEmpty = false;\n    }\n  });\n\n  return objectIsEmpty ? null : returnObject;\n}\n\ntype TupleOfHiddenAndOtherAnimations = [TargetedAnimationAsPropertyTuple[], TargetedAnimationAsPropertyTuple[]];\n\nexport function flattenAndSortAnimations(\n  hiddenAndNotAnimationTuple: TupleOfHiddenAndOtherAnimations,\n  isHiding: boolean\n): TargetedAnimationAsPropertyTuple[] {\n  if (hiddenAndNotAnimationTuple === null || hiddenAndNotAnimationTuple === undefined) {\n    return [];\n  }\n\n  const [hiddenAnimations, otherAnimations] = hiddenAndNotAnimationTuple;\n\n  if (hiddenAnimations.length > 0) {\n    if (isHiding) {\n      // hiding hostEl\n      return [].concat(otherAnimations as never[], hiddenAnimations as never[]);\n    } else {\n      // showing hostEl\n      return [].concat(hiddenAnimations as never[], otherAnimations as never[]);\n    }\n  } else {\n    return otherAnimations;\n  }\n}\n\nexport function getHidingAndNonHidingPropertyAnimations(\n  animations: PropertyDrivenAnimation\n): [TargetedAnimationAsPropertyTuple[], TargetedAnimationAsPropertyTuple[]] {\n  const hiddenAnimations: TargetedAnimationAsPropertyTuple[] = [];\n  const otherAnimations: TargetedAnimationAsPropertyTuple[] = [];\n\n  Object.getOwnPropertyNames(animations || {}).forEach((prop: string) => {\n    const animationTuple: TargetedAnimationAsPropertyTuple = [prop, clone(animations[prop])];\n    if (prop === CLARITY_MOTION_ENTER_LEAVE_PROPERTY) {\n      hiddenAnimations.push(animationTuple);\n    } else {\n      otherAnimations.push(animationTuple);\n    }\n  });\n\n  return [hiddenAnimations, otherAnimations];\n}\n\nexport function getPropertyAnimations(\n  animations: PropertyDrivenAnimation,\n  updatingProps: Map<string, any>\n): TargetedAnimationAsPropertyTuple[] {\n  const activeAnimations = filterAnimationsByUpdatedProperties(animations || {}, updatingProps);\n\n  if (activeAnimations === null) {\n    return [];\n  }\n\n  const hidingAndOtherAnimationsAsTuple = getHidingAndNonHidingPropertyAnimations(activeAnimations);\n  const isHiding = updatingProps.get(CLARITY_MOTION_ENTER_LEAVE_PROPERTY);\n\n  return flattenAndSortAnimations(hidingAndOtherAnimationsAsTuple, isHiding);\n}\n"]}