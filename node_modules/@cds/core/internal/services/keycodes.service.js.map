{"version":3,"file":"keycodes.service.js","sourceRoot":"","sources":["../../../../src/internal/services/keycodes.service.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAIjD,MAAM,eAAe,GAAkB,IAAI,GAAG,CAAC;IAC7C,CAAC,YAAY,EAAE,WAAW,CAAC;IAC3B,CAAC,aAAa,EAAE,YAAY,CAAC;IAC7B,CAAC,UAAU,EAAE,SAAS,CAAC;IACvB,CAAC,YAAY,EAAE,WAAW,CAAC;IAC3B,CAAC,KAAK,EAAE,KAAK,CAAC;IACd,CAAC,OAAO,EAAE,OAAO,CAAC;IAClB,CAAC,QAAQ,EAAE,QAAQ,CAAC;IACpB,CAAC,OAAO,EAAE,GAAG,CAAC;IACd,CAAC,MAAM,EAAE,MAAM,CAAC;IAChB,CAAC,KAAK,EAAE,KAAK,CAAC;CACf,CAAC,CAAC;AAEH;;;;;;;;;GASG;AACH,MAAM,OAAO,cAAc;IACzB;;;;OAIG;IACH,MAAM,KAAK,QAAQ;QACjB,OAAO,SAAS,CAAC,eAAe,CAAC,CAAC;IACpC,CAAC;IAED,MAAM,CAAC,GAAG,CAAC,OAAe,EAAE,IAAY;QACtC,eAAe,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,MAAM,CAAC,GAAG,CAAC,OAAe;QACxB,OAAO,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,OAAe,EAAE,eAAe,GAAG,IAAI,CAAC,QAAQ;QAC7D,OAAO,sBAAsB,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;IAC1D,CAAC;CACF;AAED,MAAM,UAAU,sBAAsB,CAAC,YAAoB,EAAE,QAAuB;IAClF,OAAO,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;AAC1C,CAAC","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { deepClone } from '../utils/identity.js';\n\nexport type KeyCodeValues = Map<string, string>;\n\nconst keyCodeRegistry: KeyCodeValues = new Map([\n  ['arrow-left', 'ArrowLeft'],\n  ['arrow-right', 'ArrowRight'],\n  ['arrow-up', 'ArrowUp'],\n  ['arrow-down', 'ArrowDown'],\n  ['tab', 'Tab'],\n  ['enter', 'Enter'],\n  ['escape', 'Escape'],\n  ['space', ' '],\n  ['home', 'Home'],\n  ['end', 'End'],\n]);\n\n/**\n * KeyCodes is a static class that gives users the ability to lookup and even store\n * keycodes for their applications.\n *\n * @privateRemarks\n *\n * The key codes dictionary/hashmap is private to this module. There is no way to access it directly\n * outside of the module.\n *\n */\nexport class KeyCodeService {\n  /**\n   * keycodes() returns a clone of the key codes dictionary/hashmap, not the actual registry.\n   * Performing actions on the return value of the keycodes getter will not be reflected in the\n   * actual keycodes dictionary!\n   */\n  static get keycodes(): KeyCodeValues {\n    return deepClone(keyCodeRegistry);\n  }\n\n  static add(keycode: string, code: string) {\n    keyCodeRegistry.set(keycode, code);\n  }\n\n  static has(keycode: string): boolean {\n    return keyCodeRegistry.has(keycode);\n  }\n\n  static getCode(keycode: string, keyCodeRegistry = this.keycodes): string {\n    return getKeycodeFromRegistry(keycode, keyCodeRegistry);\n  }\n}\n\nexport function getKeycodeFromRegistry(codeToLookup: string, registry: KeyCodeValues): string {\n  return registry.get(codeToLookup) || '';\n}\n"]}