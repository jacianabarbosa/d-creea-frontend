{"version":3,"file":"button.base.js","sourceRoot":"","sources":["../../../../src/internal/base/button.base.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,mCAAmC,CAAC;AAE9D,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,2BAA2B,CAAC;AACvE,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAC;AACxD,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAEjD,WAAW;AACX,MAAM,OAAO,aAAc,SAAQ,UAAU;IAA7C;;QAC+B,aAAQ,GAAG,KAAK,CAAC;QAQjB,aAAQ,GAAG,KAAK,CAAC;QAE2C,iBAAY,GAG1F,OAAO,CAAC;QAI2C,YAAO,GAAG,KAAK,CAAC;QAEhB,WAAM,GAAG,KAAK,CAAC;QAEG,SAAI,GAAkB,QAAQ,CAAC;QAEjD,aAAQ,GAAG,KAAK,CAAC;IA2GjF,CAAC;IArGW,MAAM;QACd,OAAO,IAAI,CAAA,iBAAiB,CAAC;IAC/B,CAAC;IAED,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,gEAAgE;IACrF,CAAC;IAES,OAAO,CAAC,KAAuB;QACvC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED;;;;;;;;OAQG;IACK,SAAS;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,MAAM,UAAU,GAAG,UAAU,CAAC,GAAG,EAAE;YACjC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,YAAY,CAAC,UAAU,CAAC,CAAC;QAC3B,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAEO,yBAAyB,CAAC,QAAiB;QACjD,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,2BAA2B,CAAC,CAAC;YACpE,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,4BAA4B,CAAC,CAAC;SACxE;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,2BAA2B,CAAC,CAAC;YACjE,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,4BAA4B,CAAC,CAAC;SACrE;IACH,CAAC;IAED;;;OAGG;IACK,2BAA2B,CAAC,KAAY;QAC9C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,SAAS,CAAC,KAAK,CAAC,CAAC;aAClB;iBAAM,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;gBAClC,MAAM,cAAc,GAAG,IAAI,CAAA;;;uBAGZ,IAAI,CAAC,QAAQ;;;mBAGjB,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;kBACtB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;kBACpB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;mBACnB,CAAC;gBAEZ,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAgB,CAAC,CAAC;gBAC7F,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAsB,CAAC;gBAC7E,MAAM,CAAC,aAAa,CAAC,IAAI,UAAU,CAAC,OAAO,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBACvF,MAAM,CAAC,MAAM,EAAE,CAAC;aACjB;SACF;IACH,CAAC;IAEO,4BAA4B,CAAC,GAAkB;QACrD,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE;YACrC,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,SAAS,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,sBAAsB,CAAC,KAAuB;;QACpD,IAAI,CAAC,QAAQ,GAAG,OAAA,IAAI,CAAC,aAAa,0CAAE,OAAO,MAAK,GAAG,CAAC;QAEpD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;YACvC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC;YAC1C,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,cAAc,GAAG,MAAM,CAAC,CAAC,iDAAiD;SACpG;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;QAE/C,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;SACtD;QAED,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YACzB,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/C;IACH,CAAC;CACF;AAlI8B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;+CAAkB;AAElB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;2CAA2B;AAE1B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;2CAAc;AAEb;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;4CAAe;AAEb;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;+CAAkB;AAEiC;IAA9E,gBAAgB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;mDAG3D;AAEuD;IAAzE,gBAAgB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;mDAAuC;AAE5D;IAAnD,gBAAgB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;8CAA2B;AAE1B;IAAnD,gBAAgB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;6CAA0B;AAEP;IAArE,gBAAgB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC;2CAA0C;AAE3D;IAAnD,gBAAgB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;+CAA4B;AAExD;IAAtB,SAAS,CAAC,UAAU,CAAC;2CAA6B;AAE3B;IAAvB,SAAS,CAAC,WAAW,CAAC;4CAA8B","sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { html, LitElement } from 'lit-element';\nimport { ifDefined } from 'lit-html/directives/if-defined.js';\n\nimport { property, internalProperty } from '../decorators/property.js';\nimport { querySlot } from '../decorators/query-slot.js';\nimport { onAnyKey } from '../utils/keycodes.js';\nimport { stopEvent } from './../utils/events.js';\n\n// @dynamic\nexport class CdsBaseButton extends LitElement {\n  @property({ type: Boolean }) readonly = false;\n\n  @property({ type: String }) type: 'button' | 'submit';\n\n  @property({ type: String }) name: string;\n\n  @property({ type: String }) value: string;\n\n  @property({ type: Boolean }) disabled = false;\n\n  @internalProperty({ type: String, attribute: 'aria-disabled', reflect: true }) protected ariaDisabled:\n    | 'true'\n    | 'false'\n    | null = 'false';\n\n  @internalProperty({ type: Number, attribute: 'tabindex', reflect: true }) protected tabIndexAttr: number | null; // don't override native prop as it stops native focus behavior\n\n  @internalProperty({ type: Boolean, reflect: true }) protected focused = false;\n\n  @internalProperty({ type: Boolean, reflect: true }) protected active = false;\n\n  @internalProperty({ type: String, reflect: true, attribute: 'role' }) protected role: string | null = 'button';\n\n  @internalProperty({ type: Boolean, reflect: true }) protected isAnchor = false;\n\n  @querySlot('cds-icon') protected icon: HTMLElement;\n\n  @querySlot('cds-badge') protected badge: HTMLElement;\n\n  protected render() {\n    return html` <slot></slot> `;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.tabIndex = 0; // initialize immediately so button can be focused synchronously\n  }\n\n  protected updated(props: Map<string, any>) {\n    super.updated(props);\n    this.updateButtonAttributes(props);\n  }\n\n  /** This mimics the mouse-click visual behavior for keyboard only users and screen readers.\n   * Browsers do not apply the CSS psuedo-selector :active in those instances. So we need this\n   * for our :active styles to show.\n   *\n   * Make sure to update a component's CSS to account for the presence of the [_active] attribute\n   * in all instance where :active is defined.\n   *\n   * @private\n   */\n  private showClick() {\n    this.active = true;\n    const clickTimer = setTimeout(() => {\n      this.active = false;\n      clearTimeout(clickTimer);\n    }, 300);\n  }\n\n  private setupNativeButtonBehavior(readonly: boolean) {\n    if (readonly) {\n      this.removeEventListener('click', this.triggerNativeButtonBehavior);\n      this.removeEventListener('keydown', this.emulateKeyBoardEventBehavior);\n    } else {\n      this.addEventListener('click', this.triggerNativeButtonBehavior);\n      this.addEventListener('keydown', this.emulateKeyBoardEventBehavior);\n    }\n  }\n\n  /**\n   * We have to append a hidden button outside the web component in the light DOM\n   * This allows us to trigger native submit events within a form element.\n   */\n  private triggerNativeButtonBehavior(event: Event) {\n    if (!this.readonly) {\n      if (this.disabled) {\n        stopEvent(event);\n      } else if (!event.defaultPrevented) {\n        const buttonTemplate = html`<button\n          class=\"cds-hidden-button\"\n          aria-hidden=\"true\"\n          ?disabled=\"${this.disabled}\"\n          tabindex=\"-1\"\n          style=\"display: none !important\"\n          value=\"${ifDefined(this.value)}\"\n          name=\"${ifDefined(this.name)}\"\n          type=\"${ifDefined(this.type)}\"\n        ></button>`;\n\n        this.showClick();\n        this.appendChild(buttonTemplate.getTemplateElement().content.cloneNode(true) as HTMLElement);\n        const button = this.querySelector('.cds-hidden-button') as HTMLButtonElement;\n        button.dispatchEvent(new MouseEvent('click', { relatedTarget: this, composed: true }));\n        button.remove();\n      }\n    }\n  }\n\n  private emulateKeyBoardEventBehavior(evt: KeyboardEvent) {\n    onAnyKey(['enter', 'space'], evt, () => {\n      this.click();\n      stopEvent(evt);\n    });\n  }\n\n  private updateButtonAttributes(props: Map<string, any>) {\n    this.isAnchor = this.parentElement?.tagName === 'A';\n\n    if (this.isAnchor && this.parentElement) {\n      this.parentElement.style.lineHeight = '0';\n      this.parentElement.style.textDecoration = 'none'; // fixes issue when style is applied to text node\n    }\n\n    this.readonly = this.readonly || this.isAnchor;\n\n    if (this.readonly) {\n      this.role = null;\n      this.tabIndexAttr = null;\n      this.ariaDisabled = null;\n    } else {\n      this.role = 'button';\n      this.tabIndexAttr = this.disabled ? -1 : 0;\n      this.ariaDisabled = this.disabled ? 'true' : 'false';\n    }\n\n    if (props.has('readonly')) {\n      this.setupNativeButtonBehavior(this.readonly);\n    }\n  }\n}\n"]}