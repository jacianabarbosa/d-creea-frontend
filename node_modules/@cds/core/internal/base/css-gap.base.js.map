{"version":3,"file":"css-gap.base.js","sourceRoot":"","sources":["../../../../src/internal/base/css-gap.base.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAEvD;;;;;;;;;;;;;;;;GAgBG;AACH,MAAM,UAAU,eAAe,CAAC,YAAiB;IAC/C,MAAM,OAAQ,SAAQ,YAAY;QAChC,iBAAiB;YACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QAChC,CAAC;KACF;IACD,OAAO,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC;AACnE,CAAC","sourcesContent":["import { browserFeatures } from '../utils/supports.js';\n\n/**\n * @internal\n * This base class allows us to conditionally apply the css shim needed\n * for Safari to use CSS Gap API. CSS Gap is used within our layout utilities.\n *\n * The shim is loaded in the `base.element.scss` and conditionally applied\n * when the `_nfg` (no flex gap) attribute is on the component. Unfortunately\n * there is no way to detect flex gap support with only CSS and JS is required.\n *\n * The Class is applied during the registration step of the custom element.\n * This shim CSS is also applied at the global level for applications in\n * the `module.shims.css` file.\n *\n * Once Safari ships Flex Gap support this can be removed. Currently Safari\n * supports Flex Gap in the Safari Technical Preview so it should be available\n * in the next major release.\n */\nexport function applyCSSGapShim(elementClass: any) {\n  class GapShim extends elementClass {\n    connectedCallback() {\n      super.connectedCallback();\n      this.setAttribute('_nfg', '');\n    }\n  }\n  return browserFeatures.supports.flexGap ? elementClass : GapShim;\n}\n"]}