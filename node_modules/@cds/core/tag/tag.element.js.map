{"version":3,"file":"tag.element.js","sourceRoot":"","sources":["../../../src/tag/tag.element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,aAAa,EAAE,EAAE,EAAE,QAAQ,EAAe,SAAS,EAAE,MAAM,oBAAoB,CAAC;AACtH,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AACnC,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAE9C;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,MAAM,OAAO,MAAO,SAAQ,aAAa;IAAzC;;QACE;;;WAGG;QAEH,WAAM,GAAgB,SAAS,CAAC;QAUhC;;;;;;WAMG;QAEH,aAAQ,GAAG,KAAK,CAAC;IAoCnB,CAAC;IAhDC,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;IAcD,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,OAAO,CAAC,KAAuD;QAC7D,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAErB,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;YAC3D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;QAED,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SACzF;IACH,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;;;2BAIY,IAAI,CAAC,YAAY;;;;oBAIxB,IAAI,CAAC,YAAY;;UAE3B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAA,qCAAqC,CAAC,CAAC,CAAC,IAAI,CAAA,EAAE;;KAEvE,CAAC;IACJ,CAAC;CACF;AAtDC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;sCACK;AAIhC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;qCACiC;AAc5D;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wCACX;AAEX;IAAL,EAAE,EAAE;4CAA8B","sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { assignSlotNames, baseStyles, CdsBaseButton, id, property, StatusTypes, syncProps } from '@cds/core/internal';\nimport { html } from 'lit-element';\nimport { styles } from './tag.element.css.js';\n\n/**\n * Tags show concise metadata in a compact format.\n * Tags are visually styled to differentiate them from buttons.\n *\n * ```typescript\n * import '@cds/core/tag/register.js';\n * ```\n *\n * ```html\n * <cds-tag status=\"info\">Info</cds-tag>\n * ```\n *\n * @element cds-tag\n * @slot - Content slot for inside the tag\n * @cssprop --background\n * @cssprop --border-color\n * @cssprop --border-radius\n * @cssprop --border-width\n * @cssprop --color\n * @cssprop --font-size\n * @cssprop --padding\n * @cssprop --size\n */\nexport class CdsTag extends CdsBaseButton {\n  /**\n   * @type {neutral | info | success | warning | danger}\n   * Sets the color of the tag (and badge if present) from the following predefined list of statuses:\n   */\n  @property({ type: String })\n  status: StatusTypes = 'neutral';\n\n  /** Sets the color of the tag (and badge if present) from a predefined list of choices */\n  @property({ type: String })\n  color: 'gray' | 'purple' | 'blue' | 'orange' | 'light-blue';\n\n  static get styles() {\n    return [baseStyles, styles];\n  }\n\n  /** If present, shows a close icon to one side of the tag.\n   *  Note that applications must wire up the action to remove the tag on click and also\n   *  that you cannot have a clickable AND closable tag. The closable attribute-property\n   *  shows the close icon. What happens when the tag is clicked is for application developers\n   *  to decide.\n   *  If closable is present, the tag will be considered \"clickable\".\n   */\n  @property({ type: Boolean })\n  closable = false;\n\n  @id() private groupLabelId: string;\n\n  connectedCallback() {\n    super.connectedCallback();\n    assignSlotNames([this.icon, 'tag-icon'], [this.badge, 'tag-badge']);\n  }\n\n  updated(props: Map<string, string | boolean | null | undefined>) {\n    super.updated(props);\n\n    if (props.has('closable') && props.get('closable') === true) {\n      this.readonly = false;\n    }\n\n    if (this.badge) {\n      syncProps(this.badge, this, { status: props.has('status'), color: props.has('color') });\n    }\n  }\n\n  render() {\n    return html`\n      <div\n        class=\"private-host\"\n        role=\"group\"\n        aria-labelledby=\"${this.groupLabelId}\"\n        cds-layout=\"horizontal align:vertical-center\"\n      >\n        <slot name=\"tag-icon\"></slot>\n        <span id=\"${this.groupLabelId}\" class=\"tag-content\" cds-text=\"lhe\"><slot></slot></span>\n        <slot name=\"tag-badge\"></slot>\n        ${this.closable ? html`<cds-icon shape=\"times\"></cds-icon>` : html``}\n      </div>\n    `;\n  }\n}\n"]}