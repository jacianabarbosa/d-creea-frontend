{"version":3,"file":"icon.classnames.js","sourceRoot":"","sources":["../../../../src/icon/utils/icon.classnames.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AAChF,OAAO,KAAK,MAAM,mBAAmB,CAAC;AAUtC,MAAM,UAAU,qBAAqB,CAAC,IAAY;IAChD,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,EAAE,EAAE;QAC9B,yCAAyC;KAC1C;IAED,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE;QACtB,+CAA4C;KAC7C;IAED,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;QACzD,mDAA+C;KAChD;IAED,sCAAyC;AAC3C,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,EAAW,EAAE,IAAY;IAC3D,MAAM,cAAc,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAC;IACnD,IAAI,GAAG,GAAG,EAAE,CAAC;IAEb,QAAQ,cAAc,EAAE;QACtB;YACE,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,0DAA0D;YACzF,mBAAmB,CAAC,EAAE,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;YACzD,OAAO;QACT;YACE,mBAAmB,CAAC,EAAE,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;YACvD,OAAO;QACT,wCAAwC,kCAAkC;YACxE,mBAAmB,CAAC,EAAE,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;YACvD,OAAO;QACT;YACE,uBAAuB;YACvB,OAAO;QACT;YACE,OAAO;KACV;AACH,CAAC","sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isTshirtSize, pxToRem, updateElementStyles } from '@cds/core/internal';\nimport isNil from 'ramda/es/isNil.js';\nimport { CdsIcon } from '../icon.element.js';\n\nexport const enum SizeUpdateStrategies {\n  BadSizeValue = 'bad-value',\n  ValidSizeString = 'value-is-string',\n  ValidNumericString = 'value-is-numeric',\n  NilSizeValue = 'value-is-nil',\n}\n\nexport function getUpdateSizeStrategy(size: string) {\n  if (isNil(size) || size === '') {\n    return SizeUpdateStrategies.NilSizeValue;\n  }\n\n  if (isTshirtSize(size)) {\n    return SizeUpdateStrategies.ValidSizeString;\n  }\n\n  if (!isNaN(parseInt(size, 10)) && size.match(/^[0-9 ]+$/)) {\n    return SizeUpdateStrategies.ValidNumericString;\n  }\n\n  return SizeUpdateStrategies.BadSizeValue;\n}\n\nexport function updateIconSizeStyle(el: CdsIcon, size: string) {\n  const updateStrategy = getUpdateSizeStrategy(size);\n  let val = '';\n\n  switch (updateStrategy) {\n    case SizeUpdateStrategies.ValidNumericString:\n      val = pxToRem(parseInt(size)); // set val in block to run expensive call only when needed\n      updateElementStyles(el, ['width', val], ['height', val]);\n      return;\n    case SizeUpdateStrategies.ValidSizeString:\n      updateElementStyles(el, ['width', ''], ['height', '']);\n      return;\n    case SizeUpdateStrategies.NilSizeValue: // nil values empty out all sizing\n      updateElementStyles(el, ['width', ''], ['height', '']);\n      return;\n    case SizeUpdateStrategies.BadSizeValue:\n      // bad-value is ignored\n      return;\n    default:\n      return;\n  }\n}\n"]}