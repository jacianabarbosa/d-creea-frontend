{"version":3,"file":"badge.element.js","sourceRoot":"","sources":["../../../src/badge/badge.element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAe,MAAM,oBAAoB,CAAC;AACvE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AAC/C,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAEhD;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AACH,MAAM,OAAO,QAAS,SAAQ,UAAU;IAAxC;;QACE;;WAEG;QAEH,UAAK,GAA4E,IAAI,CAAC;QAEtF;;;WAGG;QAEH,WAAM,GAAgB,SAAS,CAAC;IAelC,CAAC;IAbC,MAAM;QACJ,OAAO,IAAI,CAAA;;;;;;KAMV,CAAC;IACJ,CAAC;IAED,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;CACF;AAtBC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;uCAC2D;AAOtF;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;wCACK","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { baseStyles, property, StatusTypes } from '@cds/core/internal';\nimport { html, LitElement } from 'lit-element';\nimport { styles } from './badge.element.css.js';\n\n/**\n * Badges provide a method to highlight a count of an element either next to it\n * or inside the element itself.\n *\n * ```typescript\n * import '@cds/core/badge/register.js';\n * ```\n *\n * ```html\n * <cds-badge status=\"info\">2<span cds-layout=\"display:screen-reader-only\"> items. Item text for screen-readers should be added to badges in elements that will only be read in a screen-reader.</span></cds-badge>\n * ```\n *\n * @element cds-badge\n * @slot - Content slot for inside the badge\n * @cssprop --background\n * @cssprop --border-color\n * @cssprop --border-radius\n * @cssprop --border-width\n * @cssprop --color\n * @cssprop --font-size\n * @cssprop --font-weight\n * @cssprop --padding\n * @cssprop --size\n */\nexport class CdsBadge extends LitElement {\n  /**\n   * Sets the color of the badge\n   */\n  @property({ type: String })\n  color: 'default' | 'gray' | 'purple' | 'blue' | 'orange' | 'light-blue' | null = null;\n\n  /**\n   * @type {neutral | info | success | warning | danger}\n   * Sets the color of the badge\n   */\n  @property({ type: String })\n  status: StatusTypes = 'neutral';\n\n  render() {\n    return html`\n      <div class=\"private-host\">\n        <span cds-text=\"lhe\">\n          <slot></slot>\n        </span>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return [baseStyles, styles];\n  }\n}\n"]}