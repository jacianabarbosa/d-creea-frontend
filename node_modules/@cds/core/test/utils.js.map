{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/test/utils.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { TemplateResult, render } from 'lit-html';\n\nexport function createTestElement(template?: TemplateResult): Promise<HTMLElement> {\n  const element = document.createElement('div');\n  document.body.appendChild(element);\n\n  if (template) {\n    render(template, element);\n  }\n\n  return Promise.all(\n    Array.from(document.querySelectorAll(':not(:defined)')).map(el => customElements.whenDefined(el.tagName))\n  ).then(() => element);\n}\n\nexport function removeTestElement(element: HTMLElement) {\n  element.remove();\n}\n\nexport function getComponentSlotContent(component: HTMLElement): { [name: string]: string } {\n  return Array.from(component.shadowRoot?.querySelectorAll('slot') as NodeListOf<HTMLSlotElement>).reduce(\n    (acc: { [name: string]: string }, slot: HTMLSlotElement) => {\n      const name = slot.name.length > 0 ? slot.name : 'default';\n      acc[name] = (slot.assignedNodes() as any[]).reduce((p, n) => {\n        let returnDom = n.outerHTML;\n        returnDom = n.outerHTML ? n.outerHTML : n.textContent.trim();\n        return p + (returnDom ? returnDom : '');\n      }, '');\n      return acc;\n    },\n    {}\n  );\n}\n\nfunction retry(\n  fn: any,\n  maxTries = 10,\n  promise?: Promise<any>,\n  promiseObject: { resolve: any; reject: any } = {\n    resolve: null,\n    reject: null,\n  }\n) {\n  maxTries--;\n\n  promise =\n    promise ||\n    new Promise((resolve, reject) => {\n      promiseObject.resolve = resolve;\n      promiseObject.reject = reject;\n    });\n\n  fn()\n    .then((result: any) => {\n      promiseObject.resolve(result);\n    })\n    .catch(() => {\n      if (maxTries > 0) {\n        retry(fn, maxTries, promise, promiseObject);\n      } else {\n        promiseObject.reject('Max attempts reached');\n      }\n    });\n\n  return promise;\n}\n\nexport function componentIsStable(component: any) {\n  return retry(\n    () =>\n      // eslint-disable-next-line no-async-promise-executor\n      new Promise(async (resolve, reject) => {\n        const stable = await component.updateComplete;\n        if (stable) {\n          resolve('success');\n        } else {\n          reject('error');\n        }\n      })\n  );\n}\n"]}