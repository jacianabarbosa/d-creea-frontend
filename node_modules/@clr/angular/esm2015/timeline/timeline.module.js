/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { circleIcon, ClarityIcons, dotCircleIcon, errorStandardIcon, successStandardIcon } from '@cds/core/icon';
import { ClrIconModule } from '../icon/icon.module';
import { ClrSpinnerModule } from '../progress/spinner/spinner.module';
import { ClrTimeline } from './timeline';
import { ClrTimelineStep } from './timeline-step';
import { ClrTimelineStepDescription } from './timeline-step-description';
import { ClrTimelineStepHeader } from './timeline-step-header';
import { ClrTimelineStepTitle } from './timeline-step-title';
const CLR_TIMELINE_DIRECTIVES = [
    ClrTimeline,
    ClrTimelineStep,
    ClrTimelineStepDescription,
    ClrTimelineStepHeader,
    ClrTimelineStepTitle,
];
export class ClrTimelineModule {
    constructor() {
        ClarityIcons.addIcons(circleIcon, dotCircleIcon, errorStandardIcon, successStandardIcon);
    }
}
ClrTimelineModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule, ClrIconModule, ClrSpinnerModule],
                exports: [...CLR_TIMELINE_DIRECTIVES, ClrIconModule, ClrSpinnerModule],
                declarations: [CLR_TIMELINE_DIRECTIVES],
            },] }
];
ClrTimelineModule.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZWxpbmUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvY2xyLWFuZ3VsYXIvc3JjL3RpbWVsaW5lL3RpbWVsaW5lLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQVEsTUFBTSxlQUFlLENBQUM7QUFDL0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsYUFBYSxFQUFFLGlCQUFpQixFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFakgsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBRXRFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDekMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2xELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTdELE1BQU0sdUJBQXVCLEdBQWdCO0lBQzNDLFdBQVc7SUFDWCxlQUFlO0lBQ2YsMEJBQTBCO0lBQzFCLHFCQUFxQjtJQUNyQixvQkFBb0I7Q0FDckIsQ0FBQztBQU9GLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7UUFDRSxZQUFZLENBQUMsUUFBUSxDQUFDLFVBQVUsRUFBRSxhQUFhLEVBQUUsaUJBQWlCLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztJQUMzRixDQUFDOzs7WUFSRixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLGFBQWEsRUFBRSxnQkFBZ0IsQ0FBQztnQkFDeEQsT0FBTyxFQUFFLENBQUMsR0FBRyx1QkFBdUIsRUFBRSxhQUFhLEVBQUUsZ0JBQWdCLENBQUM7Z0JBQ3RFLFlBQVksRUFBRSxDQUFDLHVCQUF1QixDQUFDO2FBQ3hDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIwIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUsIFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNpcmNsZUljb24sIENsYXJpdHlJY29ucywgZG90Q2lyY2xlSWNvbiwgZXJyb3JTdGFuZGFyZEljb24sIHN1Y2Nlc3NTdGFuZGFyZEljb24gfSBmcm9tICdAY2RzL2NvcmUvaWNvbic7XG5cbmltcG9ydCB7IENsckljb25Nb2R1bGUgfSBmcm9tICcuLi9pY29uL2ljb24ubW9kdWxlJztcbmltcG9ydCB7IENsclNwaW5uZXJNb2R1bGUgfSBmcm9tICcuLi9wcm9ncmVzcy9zcGlubmVyL3NwaW5uZXIubW9kdWxlJztcblxuaW1wb3J0IHsgQ2xyVGltZWxpbmUgfSBmcm9tICcuL3RpbWVsaW5lJztcbmltcG9ydCB7IENsclRpbWVsaW5lU3RlcCB9IGZyb20gJy4vdGltZWxpbmUtc3RlcCc7XG5pbXBvcnQgeyBDbHJUaW1lbGluZVN0ZXBEZXNjcmlwdGlvbiB9IGZyb20gJy4vdGltZWxpbmUtc3RlcC1kZXNjcmlwdGlvbic7XG5pbXBvcnQgeyBDbHJUaW1lbGluZVN0ZXBIZWFkZXIgfSBmcm9tICcuL3RpbWVsaW5lLXN0ZXAtaGVhZGVyJztcbmltcG9ydCB7IENsclRpbWVsaW5lU3RlcFRpdGxlIH0gZnJvbSAnLi90aW1lbGluZS1zdGVwLXRpdGxlJztcblxuY29uc3QgQ0xSX1RJTUVMSU5FX0RJUkVDVElWRVM6IFR5cGU8YW55PltdID0gW1xuICBDbHJUaW1lbGluZSxcbiAgQ2xyVGltZWxpbmVTdGVwLFxuICBDbHJUaW1lbGluZVN0ZXBEZXNjcmlwdGlvbixcbiAgQ2xyVGltZWxpbmVTdGVwSGVhZGVyLFxuICBDbHJUaW1lbGluZVN0ZXBUaXRsZSxcbl07XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIENsckljb25Nb2R1bGUsIENsclNwaW5uZXJNb2R1bGVdLFxuICBleHBvcnRzOiBbLi4uQ0xSX1RJTUVMSU5FX0RJUkVDVElWRVMsIENsckljb25Nb2R1bGUsIENsclNwaW5uZXJNb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtDTFJfVElNRUxJTkVfRElSRUNUSVZFU10sXG59KVxuZXhwb3J0IGNsYXNzIENsclRpbWVsaW5lTW9kdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgQ2xhcml0eUljb25zLmFkZEljb25zKGNpcmNsZUljb24sIGRvdENpcmNsZUljb24sIGVycm9yU3RhbmRhcmRJY29uLCBzdWNjZXNzU3RhbmRhcmRJY29uKTtcbiAgfVxufVxuIl19