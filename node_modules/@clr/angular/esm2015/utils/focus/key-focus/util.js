/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { KeyCodes, IEKeyCodes } from './../../enums/key-codes.enum';
export function keyValidator(key) {
    if (key === KeyCodes.ArrowUp || key === IEKeyCodes.ArrowUp) {
        return KeyCodes.ArrowUp;
    }
    else if (key === KeyCodes.ArrowDown || key === IEKeyCodes.ArrowDown) {
        return KeyCodes.ArrowDown;
    }
    else if (key === KeyCodes.ArrowRight || key === IEKeyCodes.ArrowRight) {
        return KeyCodes.ArrowRight;
    }
    else if (key === KeyCodes.ArrowLeft || key === IEKeyCodes.ArrowLeft) {
        return KeyCodes.ArrowLeft;
    }
    else if (key === KeyCodes.Space || key === IEKeyCodes.Space) {
        return KeyCodes.Space;
    }
    else if (key === KeyCodes.Escape || key === IEKeyCodes.Escape) {
        return KeyCodes.Escape;
    }
    else {
        return key;
    }
}
export function preventArrowKeyScroll(event) {
    const validKey = keyValidator(event.key);
    if (validKey === KeyCodes.ArrowUp ||
        validKey === KeyCodes.ArrowDown ||
        validKey === KeyCodes.ArrowLeft ||
        validKey === KeyCodes.ArrowRight) {
        // prevent element container scroll
        // MDN references this is really the only way to prevent native browser interactions
        // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets
        event.preventDefault();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Nsci1hbmd1bGFyL3NyYy91dGlscy9mb2N1cy9rZXktZm9jdXMvdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUVwRSxNQUFNLFVBQVUsWUFBWSxDQUFDLEdBQVc7SUFDdEMsSUFBSSxHQUFHLEtBQUssUUFBUSxDQUFDLE9BQU8sSUFBSSxHQUFHLEtBQUssVUFBVSxDQUFDLE9BQU8sRUFBRTtRQUMxRCxPQUFPLFFBQVEsQ0FBQyxPQUFPLENBQUM7S0FDekI7U0FBTSxJQUFJLEdBQUcsS0FBSyxRQUFRLENBQUMsU0FBUyxJQUFJLEdBQUcsS0FBSyxVQUFVLENBQUMsU0FBUyxFQUFFO1FBQ3JFLE9BQU8sUUFBUSxDQUFDLFNBQVMsQ0FBQztLQUMzQjtTQUFNLElBQUksR0FBRyxLQUFLLFFBQVEsQ0FBQyxVQUFVLElBQUksR0FBRyxLQUFLLFVBQVUsQ0FBQyxVQUFVLEVBQUU7UUFDdkUsT0FBTyxRQUFRLENBQUMsVUFBVSxDQUFDO0tBQzVCO1NBQU0sSUFBSSxHQUFHLEtBQUssUUFBUSxDQUFDLFNBQVMsSUFBSSxHQUFHLEtBQUssVUFBVSxDQUFDLFNBQVMsRUFBRTtRQUNyRSxPQUFPLFFBQVEsQ0FBQyxTQUFTLENBQUM7S0FDM0I7U0FBTSxJQUFJLEdBQUcsS0FBSyxRQUFRLENBQUMsS0FBSyxJQUFJLEdBQUcsS0FBSyxVQUFVLENBQUMsS0FBSyxFQUFFO1FBQzdELE9BQU8sUUFBUSxDQUFDLEtBQUssQ0FBQztLQUN2QjtTQUFNLElBQUksR0FBRyxLQUFLLFFBQVEsQ0FBQyxNQUFNLElBQUksR0FBRyxLQUFLLFVBQVUsQ0FBQyxNQUFNLEVBQUU7UUFDL0QsT0FBTyxRQUFRLENBQUMsTUFBTSxDQUFDO0tBQ3hCO1NBQU07UUFDTCxPQUFPLEdBQUcsQ0FBQztLQUNaO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSxxQkFBcUIsQ0FBQyxLQUFvQjtJQUN4RCxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXpDLElBQ0UsUUFBUSxLQUFLLFFBQVEsQ0FBQyxPQUFPO1FBQzdCLFFBQVEsS0FBSyxRQUFRLENBQUMsU0FBUztRQUMvQixRQUFRLEtBQUssUUFBUSxDQUFDLFNBQVM7UUFDL0IsUUFBUSxLQUFLLFFBQVEsQ0FBQyxVQUFVLEVBQ2hDO1FBQ0EsbUNBQW1DO1FBQ25DLG9GQUFvRjtRQUNwRixtR0FBbUc7UUFDbkcsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO0tBQ3hCO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAyMCBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cblxuaW1wb3J0IHsgS2V5Q29kZXMsIElFS2V5Q29kZXMgfSBmcm9tICcuLy4uLy4uL2VudW1zL2tleS1jb2Rlcy5lbnVtJztcblxuZXhwb3J0IGZ1bmN0aW9uIGtleVZhbGlkYXRvcihrZXk6IHN0cmluZykge1xuICBpZiAoa2V5ID09PSBLZXlDb2Rlcy5BcnJvd1VwIHx8IGtleSA9PT0gSUVLZXlDb2Rlcy5BcnJvd1VwKSB7XG4gICAgcmV0dXJuIEtleUNvZGVzLkFycm93VXA7XG4gIH0gZWxzZSBpZiAoa2V5ID09PSBLZXlDb2Rlcy5BcnJvd0Rvd24gfHwga2V5ID09PSBJRUtleUNvZGVzLkFycm93RG93bikge1xuICAgIHJldHVybiBLZXlDb2Rlcy5BcnJvd0Rvd247XG4gIH0gZWxzZSBpZiAoa2V5ID09PSBLZXlDb2Rlcy5BcnJvd1JpZ2h0IHx8IGtleSA9PT0gSUVLZXlDb2Rlcy5BcnJvd1JpZ2h0KSB7XG4gICAgcmV0dXJuIEtleUNvZGVzLkFycm93UmlnaHQ7XG4gIH0gZWxzZSBpZiAoa2V5ID09PSBLZXlDb2Rlcy5BcnJvd0xlZnQgfHwga2V5ID09PSBJRUtleUNvZGVzLkFycm93TGVmdCkge1xuICAgIHJldHVybiBLZXlDb2Rlcy5BcnJvd0xlZnQ7XG4gIH0gZWxzZSBpZiAoa2V5ID09PSBLZXlDb2Rlcy5TcGFjZSB8fCBrZXkgPT09IElFS2V5Q29kZXMuU3BhY2UpIHtcbiAgICByZXR1cm4gS2V5Q29kZXMuU3BhY2U7XG4gIH0gZWxzZSBpZiAoa2V5ID09PSBLZXlDb2Rlcy5Fc2NhcGUgfHwga2V5ID09PSBJRUtleUNvZGVzLkVzY2FwZSkge1xuICAgIHJldHVybiBLZXlDb2Rlcy5Fc2NhcGU7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGtleTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcHJldmVudEFycm93S2V5U2Nyb2xsKGV2ZW50OiBLZXlib2FyZEV2ZW50KSB7XG4gIGNvbnN0IHZhbGlkS2V5ID0ga2V5VmFsaWRhdG9yKGV2ZW50LmtleSk7XG5cbiAgaWYgKFxuICAgIHZhbGlkS2V5ID09PSBLZXlDb2Rlcy5BcnJvd1VwIHx8XG4gICAgdmFsaWRLZXkgPT09IEtleUNvZGVzLkFycm93RG93biB8fFxuICAgIHZhbGlkS2V5ID09PSBLZXlDb2Rlcy5BcnJvd0xlZnQgfHxcbiAgICB2YWxpZEtleSA9PT0gS2V5Q29kZXMuQXJyb3dSaWdodFxuICApIHtcbiAgICAvLyBwcmV2ZW50IGVsZW1lbnQgY29udGFpbmVyIHNjcm9sbFxuICAgIC8vIE1ETiByZWZlcmVuY2VzIHRoaXMgaXMgcmVhbGx5IHRoZSBvbmx5IHdheSB0byBwcmV2ZW50IG5hdGl2ZSBicm93c2VyIGludGVyYWN0aW9uc1xuICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FjY2Vzc2liaWxpdHkvS2V5Ym9hcmQtbmF2aWdhYmxlX0phdmFTY3JpcHRfd2lkZ2V0c1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIH1cbn1cbiJdfQ==