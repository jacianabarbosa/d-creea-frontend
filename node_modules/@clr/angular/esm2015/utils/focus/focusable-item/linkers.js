/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
export class Linkers {
    /**
     * Links a set of focusable items to a parent along one direction
     */
    static linkParent(items, parent, direction) {
        items.forEach(item => (item[direction] = parent));
    }
    /**
     * Double-links a set of focusable items vertically, possibly looping
     */
    static linkVertical(items, loop = true) {
        items.forEach((item, index) => {
            if (index > 0) {
                item.up = items[index - 1];
            }
            if (index < items.length - 1) {
                item.down = items[index + 1];
            }
        });
        if (loop && items.length > 1) {
            items[0].up = items[items.length - 1];
            items[items.length - 1].down = items[0];
        }
    }
}
// Right now I only need the two linkers above, but we can easily add more linkers. A couple examples:
// export function linkHorizontal(items: FocusableItem[], loop = true);
// export function linkTable(items: FocusableItem[][]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlua2Vycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Nsci1hbmd1bGFyL3NyYy91dGlscy9mb2N1cy9mb2N1c2FibGUtaXRlbS9saW5rZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFNSCxNQUFNLE9BQU8sT0FBTztJQUNsQjs7T0FFRztJQUNILE1BQU0sQ0FBQyxVQUFVLENBQ2YsS0FBc0IsRUFDdEIsTUFBaUQsRUFDakQsU0FBNEI7UUFFNUIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVEOztPQUVHO0lBQ0gsTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFzQixFQUFFLElBQUksR0FBRyxJQUFJO1FBQ3JELEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDNUIsSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFO2dCQUNiLElBQUksQ0FBQyxFQUFFLEdBQUcsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQzthQUM1QjtZQUNELElBQUksS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO2dCQUM1QixJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7YUFDOUI7UUFDSCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksSUFBSSxJQUFJLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzVCLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDdEMsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUN6QztJQUNILENBQUM7Q0FDRjtBQUVELHNHQUFzRztBQUN0Ryx1RUFBdUU7QUFDdkUsdURBQXVEIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIwIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBBcnJvd0tleURpcmVjdGlvbiB9IGZyb20gJy4uL2Fycm93LWtleS1kaXJlY3Rpb24uZW51bSc7XG5pbXBvcnQgeyBGb2N1c2FibGVJdGVtIH0gZnJvbSAnLi9mb2N1c2FibGUtaXRlbSc7XG5cbmV4cG9ydCBjbGFzcyBMaW5rZXJzIHtcbiAgLyoqXG4gICAqIExpbmtzIGEgc2V0IG9mIGZvY3VzYWJsZSBpdGVtcyB0byBhIHBhcmVudCBhbG9uZyBvbmUgZGlyZWN0aW9uXG4gICAqL1xuICBzdGF0aWMgbGlua1BhcmVudChcbiAgICBpdGVtczogRm9jdXNhYmxlSXRlbVtdLFxuICAgIHBhcmVudDogRm9jdXNhYmxlSXRlbSB8IE9ic2VydmFibGU8Rm9jdXNhYmxlSXRlbT4sXG4gICAgZGlyZWN0aW9uOiBBcnJvd0tleURpcmVjdGlvblxuICApIHtcbiAgICBpdGVtcy5mb3JFYWNoKGl0ZW0gPT4gKGl0ZW1bZGlyZWN0aW9uXSA9IHBhcmVudCkpO1xuICB9XG5cbiAgLyoqXG4gICAqIERvdWJsZS1saW5rcyBhIHNldCBvZiBmb2N1c2FibGUgaXRlbXMgdmVydGljYWxseSwgcG9zc2libHkgbG9vcGluZ1xuICAgKi9cbiAgc3RhdGljIGxpbmtWZXJ0aWNhbChpdGVtczogRm9jdXNhYmxlSXRlbVtdLCBsb29wID0gdHJ1ZSkge1xuICAgIGl0ZW1zLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICBpZiAoaW5kZXggPiAwKSB7XG4gICAgICAgIGl0ZW0udXAgPSBpdGVtc1tpbmRleCAtIDFdO1xuICAgICAgfVxuICAgICAgaWYgKGluZGV4IDwgaXRlbXMubGVuZ3RoIC0gMSkge1xuICAgICAgICBpdGVtLmRvd24gPSBpdGVtc1tpbmRleCArIDFdO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGlmIChsb29wICYmIGl0ZW1zLmxlbmd0aCA+IDEpIHtcbiAgICAgIGl0ZW1zWzBdLnVwID0gaXRlbXNbaXRlbXMubGVuZ3RoIC0gMV07XG4gICAgICBpdGVtc1tpdGVtcy5sZW5ndGggLSAxXS5kb3duID0gaXRlbXNbMF07XG4gICAgfVxuICB9XG59XG5cbi8vIFJpZ2h0IG5vdyBJIG9ubHkgbmVlZCB0aGUgdHdvIGxpbmtlcnMgYWJvdmUsIGJ1dCB3ZSBjYW4gZWFzaWx5IGFkZCBtb3JlIGxpbmtlcnMuIEEgY291cGxlIGV4YW1wbGVzOlxuLy8gZXhwb3J0IGZ1bmN0aW9uIGxpbmtIb3Jpem9udGFsKGl0ZW1zOiBGb2N1c2FibGVJdGVtW10sIGxvb3AgPSB0cnVlKTtcbi8vIGV4cG9ydCBmdW5jdGlvbiBsaW5rVGFibGUoaXRlbXM6IEZvY3VzYWJsZUl0ZW1bXVtdKTtcbiJdfQ==