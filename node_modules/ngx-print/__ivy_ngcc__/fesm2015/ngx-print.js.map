{"version":3,"file":"ngx-print.js","sources":["ngx-print/lib/ngx-print.directive.ts","ngx-print/lib/ngx-print.module.ts"],"names":[],"mappings":";;;;;;;AAAA,MAIa,iBAAiB;AAC9B,IAJA;AACG,QAIM,gBAAW,GAAG,EAAE,CAAC;AAC1B;AAEI;AAEA;AAAY;AAEA;AAAa,QAclB,mBAAc,GAAG,KAAK,CAAC;AAClC;AAEI;AAEA;AAAY;AAEA;AAAa,QAAlB,eAAU,GAAW,CAAC,CAAC;AAClC;AAEI;AAEA;AAAY;AAGV;AAAY;AAAyC;AAAa,QA8B9D,oBAAe,GAAG,EAAE,CAAC;AAC/B,KAgHC;AACD;AAAS;AAAQ;AAAQ;AAAqC;AAA0B;AAAoB;AAAS,IAjJnH,IACI,UAAU,CAAC,MAAoD;AACrE,QAAI,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;AAC5B,YAAM,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;AACtC,gBAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;AACvF,aAAO;AACP,SAAK;AACL,QAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC7B,KAAG;AACH;AAEE;AAEA;AAAQ;AAAqC;AAGnC;AAA0C;AAAQ;AAIrC;AACtB;AAAS,IADL,iBAAiB;AACxB,QAAE,OAAO,WAAW,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAC,GAAG,CAAC,WAAW,CAAC;AAC5E,KAAG;AACH;AAEA;AAEyB;AAEjB;AAAoB;AACzB,IAOD,IACI,cAAc,CAAC,OAAe;AACpC;AAA0B,YAAlB,SAAS;AAAS;AACV;AAAwB;AAAa,QADjC,UAAS,WAAW;AACxC,YAAM,OAAO,gDAAgD,WAAW,IAAI,CAAC;AAC7E,SAAK,CAAA;AACJ,QAAG,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AACrC;AAA8B,kBAAlB,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;AACzC,YAAM,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;AAChC,gBAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;AACrE,aAAO;AACP,SAAK;AAAE,aAAI;AACX,YAAM,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;AAChD,SAAK;AACL,KAAG;AACH;AAEA;AAAiB;AACK;AAGX;AAAQ;AAAS,IAAlB,wBAAwB;AAClC,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC;AAChC,KAAG;AACH;AAAS;AAAiB;AAAuB;AACjD;AAAS,IADC,aAAa,CAAC,GAAgC;AAAK;AAC3C,cAAR,IAAI,GAAa,EAAE;AAC7B;AAA0B,cAAhB,QAAQ,GAAG,QAAQ,CAAC,oBAAoB,CAAC,GAAG,CAAC;AACvD,QAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;AAC1D,YAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC;AAC3C,SAAK;AACL,QAAI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC7B,KAAG;AACH;AAEA;AACC;AAAiB;AAGR;AAAQ;AAChB;AAAS,IADD,WAAW,CAAC,IAAS;AAC/B,QAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,YAAM,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AAC3C,YAAM,IAAG,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;AAC1B,gBAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,GAAG,IAAI,CAAC;AACtC,aAAO;AACP,SAAK;AACL,KAAG;AACH;AAEA;AAAiB;AAGT;AAAQ;AAAS,IAAf,eAAe;AACzB;AAA0B,YAAlB,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC;AACpE;AAA0B,YAAlB,OAAO,GAAG,aAAa,CAAC,oBAAoB,CAAC,OAAO,CAAC;AAC7D,QAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC9B;AACwB,YAAhB,GAAG,GAAG,aAAa,CAAC,oBAAoB,CAAC,UAAU,CAAC;AAC5D,QAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AAC1B,QACI,OAAO,aAAa,CAAC,SAAS,CAAC;AACnC,KAAG;AACH;AAEA;AACE;AACE;AAEJ;AAAoB;AACjB,IAAM,KAAK;AAAM;AACA,YAAZ,aAAa;AAAG;AAA0B,YAA3B,QAAQ;AAAG;AACjC,YADgC,MAAM,GAAG,EAAE;AAAG;AACjC,YADgC,KAAK,GAAG,EAAE;AACxD;AAA0B,cAAhB,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;AAC9C,QACI,IAAG,IAAI,CAAC,cAAc,EAAE;AAC5B,YAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC3C,YAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AACzC,SAAK;AACL,QACI,aAAa,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC3C,QAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,EAAE,qCAAqC,CAAC,CAAC;AAChF,QAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AAC7B,QAAI,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC5B;AACA;AACA,mBAAmB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE;AACzD,YAAY,OAAO;AACnB,YAAY,IAAI,CAAC,iBAAiB,EAAE;AACpC,YAAY,IAAI,CAAC,wBAAwB,EAAE;AAC3C,YAAY,MAAM;AAClB,YAAY,KAAK;AACjB;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI,CAAC,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,CAAC,CAAC;AAChB,QAAI,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;AAC9B,KAAG;AACH;+CAxLC,SAAS,SAAC,mBACT,QAAQ,EAAE;KAAkB,eAC7B;;2MACI;AAAE;AAEE,6BAON,KAAK;AAAM,yBAOX,KAAK;AAAM,6BAOX,KAAK;AAAM,yBAOX,KAAK;AAAM,yBAOX,KAAK;AACN,6BAoCC,KAAK;AACN,oBAiEC,YAAY,SAAC,OAAO;AACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC;AAAK;AACS;AAGQ;ACrJ9B,MASa,cAAc;AAAI;4CAN9B,QAAQ,SAAC,mBACR,YAAY,EAAE,CAAC;cAAiB,CAAC,mBACjC,OAAO,EAAE,EACR,mBACD,OAAO;AAAE,CAAC,iBAAiB,CAAC,eAC7B;;;;;;;;;0BACI;AAAC;AAAC;AAAK;AACE;AAAsH;AAAI;AAAC;AAAK;AAAmC;AAAsH;AAAI;AAAC;;ADVA,AAIA,AAAA,AAHA,AAKA,AAAA,AAAA,AAAA,AAAA,AAqBA,AAAA,AAAA,AAAA,AAAA,AAOA,AAAA,AAAA,AAAA,AAAA,AAsCA,AAAA,AAAA,AAAA,AAAA,AAiHA,AAhJA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAYA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAevLA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAUA,AAAA,AAOA,AAAA,AAOA,AAAA,AAOA,AAAA,AAOA,AAAA,AAqCA,AAAA,AAkEA,AAAA,AAAA,AAAA,AChJA,AASA,AAAA,AANA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA","sourcesContent":["import { Directive, HostListener, Input } from '@angular/core';\r\n@Directive({\r\n  selector: \"button[ngxPrint]\"\r\n})\r\nexport class NgxPrintDirective {\r\n\r\n  public _printStyle = [];\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  @Input() printSectionId: string;\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  @Input() printTitle: string;\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  @Input() useExistingCss = false;\r\n\r\n  /**\r\n   * A delay in milliseconds to force the print dialog to wait before opened. Default: 0\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  @Input() printDelay: number = 0;\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  @Input()\r\n  set printStyle(values: { [key: string]: { [key: string]: string } }) {\r\n    for (let key in values) {\r\n      if (values.hasOwnProperty(key)) {\r\n      this._printStyle.push((key + JSON.stringify(values[key])).replace(/['\"]+/g, ''));\r\n      }\r\n    }\r\n    this.returnStyleValues();\r\n  }\r\n\r\n/**\r\n *\r\n *\r\n * @returns the string that create the stylesheet which will be injected\r\n * later within <style></style> tag.\r\n *\r\n * -join/replace to transform an array objects to css-styled string\r\n *\r\n * @memberof NgxPrintDirective\r\n */\r\npublic returnStyleValues() {\r\n  return `<style> ${this._printStyle.join(' ').replace(/,/g,';')} </style>`;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @returns html for the given tag\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  private _styleSheetFile = '';\r\n\r\n  /**\r\n   * @memberof NgxPrintDirective\r\n   * @param cssList\r\n   */\r\n  @Input()\r\n  set styleSheetFile(cssList: string) {\r\n    let linkTagFn = function(cssFileName) {\r\n      return `<link rel=\"stylesheet\" type=\"text/css\" href=\"${cssFileName}\">`;\r\n    }\r\n    if (cssList.indexOf(',') !== -1) {\r\n      const valueArr = cssList.split(',');\r\n      for (let val of valueArr) {\r\n        this._styleSheetFile = this._styleSheetFile + linkTagFn(val);\r\n      }\r\n    } else {\r\n      this._styleSheetFile = linkTagFn(cssList);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns string which contains the link tags containing the css which will\r\n   * be injected later within <head></head> tag.\r\n   *\r\n   */\r\n  private returnStyleSheetLinkTags() {\r\n    return this._styleSheetFile;\r\n  }\r\n  private getElementTag(tag: keyof HTMLElementTagNameMap): string {\r\n    const html: string[] = [];\r\n    const elements = document.getElementsByTagName(tag);\r\n    for (let index = 0; index < elements.length; index++) {\r\n      html.push(elements[index].outerHTML);\r\n    }\r\n    return html.join('\\r\\n');\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param data the html element collection to save defaults to\r\n   * \r\n   */\r\n  private getFormData(data: any) {\r\n    for (var i = 0; i < data.length; i++) {\r\n      data[i].defaultValue = data[i].value;\r\n      if(data[i].checked) {\r\n        data[i].defaultChecked = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns html section to be printed along with some associated inputs\r\n   * \r\n   */\r\n  private getHtmlContents() {\r\n    let printContents = document.getElementById(this.printSectionId);\r\n    let innards = printContents.getElementsByTagName('input');\r\n    this.getFormData(innards);\r\n\r\n    let txt = printContents.getElementsByTagName('textarea');\r\n    this.getFormData(txt);\r\n    \r\n    return printContents.innerHTML;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  @HostListener('click')\r\n  public print(): void {\r\n    let printContents, popupWin, styles = '', links = '';\r\n    const baseTag = this.getElementTag('base');\r\n\r\n    if(this.useExistingCss) {\r\n      styles = this.getElementTag('style');\r\n      links = this.getElementTag('link');\r\n    }\r\n\r\n    printContents = this.getHtmlContents();\r\n    popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=auto,width=auto\");\r\n    popupWin.document.open();\r\n    popupWin.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>${this.printTitle ? this.printTitle : \"\"}</title>\r\n          ${baseTag}\r\n          ${this.returnStyleValues()}\r\n          ${this.returnStyleSheetLinkTags()}\r\n          ${styles}\r\n          ${links}\r\n        </head>\r\n        <body>\r\n          ${printContents}\r\n          <script defer>\r\n            function triggerPrint(event) {\r\n              window.removeEventListener('load', triggerPrint, false);\r\n              setTimeout(function() {\r\n                closeWindow(window.print());\r\n              }, ${this.printDelay});\r\n            }\r\n            function closeWindow(){\r\n                window.close();\r\n            }\r\n            window.addEventListener('load', triggerPrint, false);\r\n          </script>\r\n        </body>\r\n      </html>`);\r\n    popupWin.document.close();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgxPrintDirective } from './ngx-print.directive';\r\n\r\n@NgModule({\r\n  declarations: [NgxPrintDirective],\r\n  imports: [\r\n  ],\r\n  exports: [NgxPrintDirective]\r\n})\r\nexport class NgxPrintModule { }\r\n"]}